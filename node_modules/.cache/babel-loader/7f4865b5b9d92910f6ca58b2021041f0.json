{"ast":null,"code":"var _jsxFileName = \"/Users/amanshrestha/Work/Careers Uncorked/uncorked/src/assets/Components/StoriesFromYoutube.js\";\nimport React, { Component } from 'react';\nimport FetchService from '../helper/FetchService';\nexport default class StoriesFromYoutube extends Component {\n  constructor() {\n    super();\n    this.state = {\n      responseObject: {},\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"Mounted\");\n    FetchService.GET(\"https://youtube.googleapis.com/youtube/v3/playlistItems?part=contentDetails&maxResults=50&playlistId=PLIy7-i_9rAyQ9teMuV1dJHWuVcsW5y39o&key=AIzaSyD2gBCggKBW5r6XkCzCa4dLoQuL7mnB9Ok\").then(res => {\n      // console.log(res['feed']['entry'][0]['content']['$t']);\n      // this.setState({ responseObject: res['feed']['entry'] });\n      var listFound = res.items;\n      this.setState({\n        responseObject: listFound\n      });\n      this.setState({\n        loading: false\n      });\n      console.log(this.state.responseObject);\n    });\n  }\n\n  getStoriesToDisplay() {\n    const youtubeItems = [];\n\n    if (!this.state.loading) {\n      console.log(\"Size is: \" + this.state.formattedObject.length);\n\n      for (var i = 0; i < this.state.formattedObject.length; i++) {\n        guestItems.push(this.state.responseObject[i]['contentDetails'][videoID]);\n      }\n    }\n\n    return guestItems;\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"Here right now\");\n  }\n\n}","map":{"version":3,"sources":["/Users/amanshrestha/Work/Careers Uncorked/uncorked/src/assets/Components/StoriesFromYoutube.js"],"names":["React","Component","FetchService","StoriesFromYoutube","constructor","state","responseObject","loading","componentDidMount","console","log","GET","then","res","listFound","items","setState","getStoriesToDisplay","youtubeItems","formattedObject","length","i","guestItems","push","videoID","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAGA,eAAe,MAAMC,kBAAN,SAAiCF,SAAjC,CAA2C;AACtDG,EAAAA,WAAW,GAAG;AACV;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,EADP;AAETC,MAAAA,OAAO,EAAE;AAFA,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAR,IAAAA,YAAY,CAACS,GAAb,CAAiB,qLAAjB,EACKC,IADL,CACWC,GAAD,IAAS;AACX;AACA;AACA,UAAIC,SAAS,GAAGD,GAAG,CAACE,KAApB;AACA,WAAKC,QAAL,CAAc;AAAEV,QAAAA,cAAc,EAAEQ;AAAlB,OAAd;AACA,WAAKE,QAAL,CAAc;AAAET,QAAAA,OAAO,EAAE;AAAX,OAAd;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKL,KAAL,CAAWC,cAAvB;AACH,KARL;AASH;;AAEDW,EAAAA,mBAAmB,GAAG;AAClB,UAAMC,YAAY,GAAG,EAArB;;AACA,QAAI,CAAC,KAAKb,KAAL,CAAWE,OAAhB,EAAyB;AACrBE,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAc,KAAKL,KAAL,CAAWc,eAAX,CAA2BC,MAArD;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKhB,KAAL,CAAWc,eAAX,CAA2BC,MAA/C,EAAuDC,CAAC,EAAxD,EAA4D;AACxDC,QAAAA,UAAU,CAACC,IAAX,CACI,KAAKlB,KAAL,CAAWC,cAAX,CAA0Be,CAA1B,EAA6B,gBAA7B,EAA+CG,OAA/C,CADJ;AAGH;AACJ;;AACD,WAAOF,UAAP;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ;AAKH;;AAzCqD","sourcesContent":["import React, { Component } from 'react'\nimport FetchService from '../helper/FetchService'\n\n\nexport default class StoriesFromYoutube extends Component {\n    constructor() {\n        super();\n        this.state = {\n            responseObject: {},\n            loading: true,\n        }\n    }\n\n    componentDidMount() {\n        console.log(\"Mounted\");\n        FetchService.GET(\"https://youtube.googleapis.com/youtube/v3/playlistItems?part=contentDetails&maxResults=50&playlistId=PLIy7-i_9rAyQ9teMuV1dJHWuVcsW5y39o&key=AIzaSyD2gBCggKBW5r6XkCzCa4dLoQuL7mnB9Ok\")\n            .then((res) => {\n                // console.log(res['feed']['entry'][0]['content']['$t']);\n                // this.setState({ responseObject: res['feed']['entry'] });\n                var listFound = res.items\n                this.setState({ responseObject: listFound });\n                this.setState({ loading: false })\n                console.log(this.state.responseObject);\n            })\n    }\n\n    getStoriesToDisplay() {\n        const youtubeItems = [];\n        if (!this.state.loading) {\n            console.log(\"Size is: \" + this.state.formattedObject.length);\n            for (var i = 0; i < this.state.formattedObject.length; i++) {\n                guestItems.push(\n                    this.state.responseObject[i]['contentDetails'][videoID]\n                );\n            }\n        }\n        return guestItems;\n    }\n\n    render() {\n        return (\n            <div>\n                Here right now\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}